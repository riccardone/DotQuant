// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ExecutionFilter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from ExecutionFilter.proto</summary>
  public static partial class ExecutionFilterReflection {

    #region Descriptor
    /// <summary>File descriptor for ExecutionFilter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExecutionFilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVFeGVjdXRpb25GaWx0ZXIucHJvdG8SCHByb3RvYnVmIrQCCg9FeGVjdXRp",
            "b25GaWx0ZXISFQoIY2xpZW50SWQYASABKAVIAIgBARIVCghhY2N0Q29kZRgC",
            "IAEoCUgBiAEBEhEKBHRpbWUYAyABKAlIAogBARITCgZzeW1ib2wYBCABKAlI",
            "A4gBARIUCgdzZWNUeXBlGAUgASgJSASIAQESFQoIZXhjaGFuZ2UYBiABKAlI",
            "BYgBARIRCgRzaWRlGAcgASgJSAaIAQESFgoJbGFzdE5EYXlzGAggASgFSAeI",
            "AQESFQoNc3BlY2lmaWNEYXRlcxgJIAMoBUILCglfY2xpZW50SWRCCwoJX2Fj",
            "Y3RDb2RlQgcKBV90aW1lQgkKB19zeW1ib2xCCgoIX3NlY1R5cGVCCwoJX2V4",
            "Y2hhbmdlQgcKBV9zaWRlQgwKCl9sYXN0TkRheXNCPwoWY29tLmliLmNsaWVu",
            "dC5wcm90b2J1ZkIURXhlY3V0aW9uRmlsdGVyUHJvdG+qAg5JQkFwaS5wcm90",
            "b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.ExecutionFilter), global::IBApi.protobuf.ExecutionFilter.Parser, new[]{ "ClientId", "AcctCode", "Time", "Symbol", "SecType", "Exchange", "Side", "LastNDays", "SpecificDates" }, new[]{ "ClientId", "AcctCode", "Time", "Symbol", "SecType", "Exchange", "Side", "LastNDays" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExecutionFilter : pb::IMessage<ExecutionFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutionFilter> _parser = new pb::MessageParser<ExecutionFilter>(() => new ExecutionFilter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutionFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.ExecutionFilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionFilter(ExecutionFilter other) : this() {
      _hasBits0 = other._hasBits0;
      clientId_ = other.clientId_;
      acctCode_ = other.acctCode_;
      time_ = other.time_;
      symbol_ = other.symbol_;
      secType_ = other.secType_;
      exchange_ = other.exchange_;
      side_ = other.side_;
      lastNDays_ = other.lastNDays_;
      specificDates_ = other.specificDates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionFilter Clone() {
      return new ExecutionFilter(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private readonly static int ClientIdDefaultValue = 0;

    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientId {
      get { if ((_hasBits0 & 1) != 0) { return clientId_; } else { return ClientIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clientId_ = value;
      }
    }
    /// <summary>Gets whether the "clientId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clientId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "acctCode" field.</summary>
    public const int AcctCodeFieldNumber = 2;
    private readonly static string AcctCodeDefaultValue = "";

    private string acctCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AcctCode {
      get { return acctCode_ ?? AcctCodeDefaultValue; }
      set {
        acctCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "acctCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAcctCode {
      get { return acctCode_ != null; }
    }
    /// <summary>Clears the value of the "acctCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAcctCode() {
      acctCode_ = null;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private readonly static string TimeDefaultValue = "";

    private string time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Time {
      get { return time_ ?? TimeDefaultValue; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return time_ != null; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      time_ = null;
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private readonly static string SymbolDefaultValue = "";

    private string symbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_ ?? SymbolDefaultValue; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSymbol {
      get { return symbol_ != null; }
    }
    /// <summary>Clears the value of the "symbol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSymbol() {
      symbol_ = null;
    }

    /// <summary>Field number for the "secType" field.</summary>
    public const int SecTypeFieldNumber = 5;
    private readonly static string SecTypeDefaultValue = "";

    private string secType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecType {
      get { return secType_ ?? SecTypeDefaultValue; }
      set {
        secType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecType {
      get { return secType_ != null; }
    }
    /// <summary>Clears the value of the "secType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecType() {
      secType_ = null;
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 6;
    private readonly static string ExchangeDefaultValue = "";

    private string exchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_ ?? ExchangeDefaultValue; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return exchange_ != null; }
    }
    /// <summary>Clears the value of the "exchange" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      exchange_ = null;
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 7;
    private readonly static string SideDefaultValue = "";

    private string side_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Side {
      get { return side_ ?? SideDefaultValue; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "side" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSide {
      get { return side_ != null; }
    }
    /// <summary>Clears the value of the "side" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSide() {
      side_ = null;
    }

    /// <summary>Field number for the "lastNDays" field.</summary>
    public const int LastNDaysFieldNumber = 8;
    private readonly static int LastNDaysDefaultValue = 0;

    private int lastNDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastNDays {
      get { if ((_hasBits0 & 2) != 0) { return lastNDays_; } else { return LastNDaysDefaultValue; } }
      set {
        _hasBits0 |= 2;
        lastNDays_ = value;
      }
    }
    /// <summary>Gets whether the "lastNDays" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastNDays {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "lastNDays" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastNDays() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "specificDates" field.</summary>
    public const int SpecificDatesFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_specificDates_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> specificDates_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SpecificDates {
      get { return specificDates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutionFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutionFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (AcctCode != other.AcctCode) return false;
      if (Time != other.Time) return false;
      if (Symbol != other.Symbol) return false;
      if (SecType != other.SecType) return false;
      if (Exchange != other.Exchange) return false;
      if (Side != other.Side) return false;
      if (LastNDays != other.LastNDays) return false;
      if(!specificDates_.Equals(other.specificDates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (HasAcctCode) hash ^= AcctCode.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasSymbol) hash ^= Symbol.GetHashCode();
      if (HasSecType) hash ^= SecType.GetHashCode();
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasSide) hash ^= Side.GetHashCode();
      if (HasLastNDays) hash ^= LastNDays.GetHashCode();
      hash ^= specificDates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClientId) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (HasAcctCode) {
        output.WriteRawTag(18);
        output.WriteString(AcctCode);
      }
      if (HasTime) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (HasSymbol) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (HasSecType) {
        output.WriteRawTag(42);
        output.WriteString(SecType);
      }
      if (HasExchange) {
        output.WriteRawTag(50);
        output.WriteString(Exchange);
      }
      if (HasSide) {
        output.WriteRawTag(58);
        output.WriteString(Side);
      }
      if (HasLastNDays) {
        output.WriteRawTag(64);
        output.WriteInt32(LastNDays);
      }
      specificDates_.WriteTo(output, _repeated_specificDates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClientId) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (HasAcctCode) {
        output.WriteRawTag(18);
        output.WriteString(AcctCode);
      }
      if (HasTime) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (HasSymbol) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (HasSecType) {
        output.WriteRawTag(42);
        output.WriteString(SecType);
      }
      if (HasExchange) {
        output.WriteRawTag(50);
        output.WriteString(Exchange);
      }
      if (HasSide) {
        output.WriteRawTag(58);
        output.WriteString(Side);
      }
      if (HasLastNDays) {
        output.WriteRawTag(64);
        output.WriteInt32(LastNDays);
      }
      specificDates_.WriteTo(ref output, _repeated_specificDates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (HasAcctCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcctCode);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (HasSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (HasSecType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecType);
      }
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasSide) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (HasLastNDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastNDays);
      }
      size += specificDates_.CalculateSize(_repeated_specificDates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutionFilter other) {
      if (other == null) {
        return;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      if (other.HasAcctCode) {
        AcctCode = other.AcctCode;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasSymbol) {
        Symbol = other.Symbol;
      }
      if (other.HasSecType) {
        SecType = other.SecType;
      }
      if (other.HasExchange) {
        Exchange = other.Exchange;
      }
      if (other.HasSide) {
        Side = other.Side;
      }
      if (other.HasLastNDays) {
        LastNDays = other.LastNDays;
      }
      specificDates_.Add(other.specificDates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            AcctCode = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            SecType = input.ReadString();
            break;
          }
          case 50: {
            Exchange = input.ReadString();
            break;
          }
          case 58: {
            Side = input.ReadString();
            break;
          }
          case 64: {
            LastNDays = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            specificDates_.AddEntriesFrom(input, _repeated_specificDates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            AcctCode = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            SecType = input.ReadString();
            break;
          }
          case 50: {
            Exchange = input.ReadString();
            break;
          }
          case 58: {
            Side = input.ReadString();
            break;
          }
          case 64: {
            LastNDays = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            specificDates_.AddEntriesFrom(ref input, _repeated_specificDates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
