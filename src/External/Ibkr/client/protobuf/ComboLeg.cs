// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ComboLeg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from ComboLeg.proto</summary>
  public static partial class ComboLegReflection {

    #region Descriptor
    /// <summary>File descriptor for ComboLeg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComboLegReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Db21ib0xlZy5wcm90bxIIcHJvdG9idWYi6gIKCENvbWJvTGVnEhIKBWNv",
            "bklkGAEgASgFSACIAQESEgoFcmF0aW8YAiABKAVIAYgBARITCgZhY3Rpb24Y",
            "AyABKAlIAogBARIVCghleGNoYW5nZRgEIAEoCUgDiAEBEhYKCW9wZW5DbG9z",
            "ZRgFIAEoBUgEiAEBEhsKDnNob3J0U2FsZXNTbG90GAYgASgFSAWIAQESHwoS",
            "ZGVzaWduYXRlZExvY2F0aW9uGAcgASgJSAaIAQESFwoKZXhlbXB0Q29kZRgI",
            "IAEoBUgHiAEBEhgKC3BlckxlZ1ByaWNlGAkgASgBSAiIAQFCCAoGX2Nvbklk",
            "QggKBl9yYXRpb0IJCgdfYWN0aW9uQgsKCV9leGNoYW5nZUIMCgpfb3BlbkNs",
            "b3NlQhEKD19zaG9ydFNhbGVzU2xvdEIVChNfZGVzaWduYXRlZExvY2F0aW9u",
            "Qg0KC19leGVtcHRDb2RlQg4KDF9wZXJMZWdQcmljZUI4ChZjb20uaWIuY2xp",
            "ZW50LnByb3RvYnVmQg1Db21ib0xlZ1Byb3RvqgIOSUJBcGkucHJvdG9idWZi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.ComboLeg), global::IBApi.protobuf.ComboLeg.Parser, new[]{ "ConId", "Ratio", "Action", "Exchange", "OpenClose", "ShortSalesSlot", "DesignatedLocation", "ExemptCode", "PerLegPrice" }, new[]{ "ConId", "Ratio", "Action", "Exchange", "OpenClose", "ShortSalesSlot", "DesignatedLocation", "ExemptCode", "PerLegPrice" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ComboLeg : pb::IMessage<ComboLeg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComboLeg> _parser = new pb::MessageParser<ComboLeg>(() => new ComboLeg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComboLeg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.ComboLegReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboLeg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboLeg(ComboLeg other) : this() {
      _hasBits0 = other._hasBits0;
      conId_ = other.conId_;
      ratio_ = other.ratio_;
      action_ = other.action_;
      exchange_ = other.exchange_;
      openClose_ = other.openClose_;
      shortSalesSlot_ = other.shortSalesSlot_;
      designatedLocation_ = other.designatedLocation_;
      exemptCode_ = other.exemptCode_;
      perLegPrice_ = other.perLegPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComboLeg Clone() {
      return new ComboLeg(this);
    }

    /// <summary>Field number for the "conId" field.</summary>
    public const int ConIdFieldNumber = 1;
    private readonly static int ConIdDefaultValue = 0;

    private int conId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConId {
      get { if ((_hasBits0 & 1) != 0) { return conId_; } else { return ConIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        conId_ = value;
      }
    }
    /// <summary>Gets whether the "conId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "conId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 2;
    private readonly static int RatioDefaultValue = 0;

    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ratio {
      get { if ((_hasBits0 & 2) != 0) { return ratio_; } else { return RatioDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ratio_ = value;
      }
    }
    /// <summary>Gets whether the "ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRatio {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRatio() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 4;
    private readonly static string ExchangeDefaultValue = "";

    private string exchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_ ?? ExchangeDefaultValue; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return exchange_ != null; }
    }
    /// <summary>Clears the value of the "exchange" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      exchange_ = null;
    }

    /// <summary>Field number for the "openClose" field.</summary>
    public const int OpenCloseFieldNumber = 5;
    private readonly static int OpenCloseDefaultValue = 0;

    private int openClose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpenClose {
      get { if ((_hasBits0 & 4) != 0) { return openClose_; } else { return OpenCloseDefaultValue; } }
      set {
        _hasBits0 |= 4;
        openClose_ = value;
      }
    }
    /// <summary>Gets whether the "openClose" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenClose {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "openClose" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenClose() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shortSalesSlot" field.</summary>
    public const int ShortSalesSlotFieldNumber = 6;
    private readonly static int ShortSalesSlotDefaultValue = 0;

    private int shortSalesSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShortSalesSlot {
      get { if ((_hasBits0 & 8) != 0) { return shortSalesSlot_; } else { return ShortSalesSlotDefaultValue; } }
      set {
        _hasBits0 |= 8;
        shortSalesSlot_ = value;
      }
    }
    /// <summary>Gets whether the "shortSalesSlot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShortSalesSlot {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "shortSalesSlot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShortSalesSlot() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "designatedLocation" field.</summary>
    public const int DesignatedLocationFieldNumber = 7;
    private readonly static string DesignatedLocationDefaultValue = "";

    private string designatedLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DesignatedLocation {
      get { return designatedLocation_ ?? DesignatedLocationDefaultValue; }
      set {
        designatedLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "designatedLocation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesignatedLocation {
      get { return designatedLocation_ != null; }
    }
    /// <summary>Clears the value of the "designatedLocation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesignatedLocation() {
      designatedLocation_ = null;
    }

    /// <summary>Field number for the "exemptCode" field.</summary>
    public const int ExemptCodeFieldNumber = 8;
    private readonly static int ExemptCodeDefaultValue = 0;

    private int exemptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExemptCode {
      get { if ((_hasBits0 & 16) != 0) { return exemptCode_; } else { return ExemptCodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        exemptCode_ = value;
      }
    }
    /// <summary>Gets whether the "exemptCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExemptCode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "exemptCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExemptCode() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "perLegPrice" field.</summary>
    public const int PerLegPriceFieldNumber = 9;
    private readonly static double PerLegPriceDefaultValue = 0D;

    private double perLegPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PerLegPrice {
      get { if ((_hasBits0 & 32) != 0) { return perLegPrice_; } else { return PerLegPriceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        perLegPrice_ = value;
      }
    }
    /// <summary>Gets whether the "perLegPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPerLegPrice {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "perLegPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPerLegPrice() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComboLeg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComboLeg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConId != other.ConId) return false;
      if (Ratio != other.Ratio) return false;
      if (Action != other.Action) return false;
      if (Exchange != other.Exchange) return false;
      if (OpenClose != other.OpenClose) return false;
      if (ShortSalesSlot != other.ShortSalesSlot) return false;
      if (DesignatedLocation != other.DesignatedLocation) return false;
      if (ExemptCode != other.ExemptCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PerLegPrice, other.PerLegPrice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConId) hash ^= ConId.GetHashCode();
      if (HasRatio) hash ^= Ratio.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasOpenClose) hash ^= OpenClose.GetHashCode();
      if (HasShortSalesSlot) hash ^= ShortSalesSlot.GetHashCode();
      if (HasDesignatedLocation) hash ^= DesignatedLocation.GetHashCode();
      if (HasExemptCode) hash ^= ExemptCode.GetHashCode();
      if (HasPerLegPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PerLegPrice);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConId) {
        output.WriteRawTag(8);
        output.WriteInt32(ConId);
      }
      if (HasRatio) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (HasAction) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (HasExchange) {
        output.WriteRawTag(34);
        output.WriteString(Exchange);
      }
      if (HasOpenClose) {
        output.WriteRawTag(40);
        output.WriteInt32(OpenClose);
      }
      if (HasShortSalesSlot) {
        output.WriteRawTag(48);
        output.WriteInt32(ShortSalesSlot);
      }
      if (HasDesignatedLocation) {
        output.WriteRawTag(58);
        output.WriteString(DesignatedLocation);
      }
      if (HasExemptCode) {
        output.WriteRawTag(64);
        output.WriteInt32(ExemptCode);
      }
      if (HasPerLegPrice) {
        output.WriteRawTag(73);
        output.WriteDouble(PerLegPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConId) {
        output.WriteRawTag(8);
        output.WriteInt32(ConId);
      }
      if (HasRatio) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (HasAction) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (HasExchange) {
        output.WriteRawTag(34);
        output.WriteString(Exchange);
      }
      if (HasOpenClose) {
        output.WriteRawTag(40);
        output.WriteInt32(OpenClose);
      }
      if (HasShortSalesSlot) {
        output.WriteRawTag(48);
        output.WriteInt32(ShortSalesSlot);
      }
      if (HasDesignatedLocation) {
        output.WriteRawTag(58);
        output.WriteString(DesignatedLocation);
      }
      if (HasExemptCode) {
        output.WriteRawTag(64);
        output.WriteInt32(ExemptCode);
      }
      if (HasPerLegPrice) {
        output.WriteRawTag(73);
        output.WriteDouble(PerLegPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasConId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConId);
      }
      if (HasRatio) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasOpenClose) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpenClose);
      }
      if (HasShortSalesSlot) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShortSalesSlot);
      }
      if (HasDesignatedLocation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesignatedLocation);
      }
      if (HasExemptCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExemptCode);
      }
      if (HasPerLegPrice) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComboLeg other) {
      if (other == null) {
        return;
      }
      if (other.HasConId) {
        ConId = other.ConId;
      }
      if (other.HasRatio) {
        Ratio = other.Ratio;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasExchange) {
        Exchange = other.Exchange;
      }
      if (other.HasOpenClose) {
        OpenClose = other.OpenClose;
      }
      if (other.HasShortSalesSlot) {
        ShortSalesSlot = other.ShortSalesSlot;
      }
      if (other.HasDesignatedLocation) {
        DesignatedLocation = other.DesignatedLocation;
      }
      if (other.HasExemptCode) {
        ExemptCode = other.ExemptCode;
      }
      if (other.HasPerLegPrice) {
        PerLegPrice = other.PerLegPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConId = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
          case 34: {
            Exchange = input.ReadString();
            break;
          }
          case 40: {
            OpenClose = input.ReadInt32();
            break;
          }
          case 48: {
            ShortSalesSlot = input.ReadInt32();
            break;
          }
          case 58: {
            DesignatedLocation = input.ReadString();
            break;
          }
          case 64: {
            ExemptCode = input.ReadInt32();
            break;
          }
          case 73: {
            PerLegPrice = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConId = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
          case 34: {
            Exchange = input.ReadString();
            break;
          }
          case 40: {
            OpenClose = input.ReadInt32();
            break;
          }
          case 48: {
            ShortSalesSlot = input.ReadInt32();
            break;
          }
          case 58: {
            DesignatedLocation = input.ReadString();
            break;
          }
          case 64: {
            ExemptCode = input.ReadInt32();
            break;
          }
          case 73: {
            PerLegPrice = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
