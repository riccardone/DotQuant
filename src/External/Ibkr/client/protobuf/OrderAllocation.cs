// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OrderAllocation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from OrderAllocation.proto</summary>
  public static partial class OrderAllocationReflection {

    #region Descriptor
    /// <summary>File descriptor for OrderAllocation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderAllocationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVPcmRlckFsbG9jYXRpb24ucHJvdG8SCHByb3RvYnVmIsMCCg9PcmRlckFs",
            "bG9jYXRpb24SFAoHYWNjb3VudBgBIAEoCUgAiAEBEhUKCHBvc2l0aW9uGAIg",
            "ASgJSAGIAQESHAoPcG9zaXRpb25EZXNpcmVkGAMgASgJSAKIAQESGgoNcG9z",
            "aXRpb25BZnRlchgEIAEoCUgDiAEBEhwKD2Rlc2lyZWRBbGxvY1F0eRgFIAEo",
            "CUgEiAEBEhwKD2FsbG93ZWRBbGxvY1F0eRgGIAEoCUgFiAEBEhcKCmlzTW9u",
            "ZXRhcnkYByABKAhIBogBAUIKCghfYWNjb3VudEILCglfcG9zaXRpb25CEgoQ",
            "X3Bvc2l0aW9uRGVzaXJlZEIQCg5fcG9zaXRpb25BZnRlckISChBfZGVzaXJl",
            "ZEFsbG9jUXR5QhIKEF9hbGxvd2VkQWxsb2NRdHlCDQoLX2lzTW9uZXRhcnlC",
            "PwoWY29tLmliLmNsaWVudC5wcm90b2J1ZkIUT3JkZXJBbGxvY2F0aW9uUHJv",
            "dG+qAg5JQkFwaS5wcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.OrderAllocation), global::IBApi.protobuf.OrderAllocation.Parser, new[]{ "Account", "Position", "PositionDesired", "PositionAfter", "DesiredAllocQty", "AllowedAllocQty", "IsMonetary" }, new[]{ "Account", "Position", "PositionDesired", "PositionAfter", "DesiredAllocQty", "AllowedAllocQty", "IsMonetary" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OrderAllocation : pb::IMessage<OrderAllocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderAllocation> _parser = new pb::MessageParser<OrderAllocation>(() => new OrderAllocation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderAllocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.OrderAllocationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderAllocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderAllocation(OrderAllocation other) : this() {
      _hasBits0 = other._hasBits0;
      account_ = other.account_;
      position_ = other.position_;
      positionDesired_ = other.positionDesired_;
      positionAfter_ = other.positionAfter_;
      desiredAllocQty_ = other.desiredAllocQty_;
      allowedAllocQty_ = other.allowedAllocQty_;
      isMonetary_ = other.isMonetary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderAllocation Clone() {
      return new OrderAllocation(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private readonly static string AccountDefaultValue = "";

    private string account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_ ?? AccountDefaultValue; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccount {
      get { return account_ != null; }
    }
    /// <summary>Clears the value of the "account" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccount() {
      account_ = null;
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private readonly static string PositionDefaultValue = "";

    private string position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Position {
      get { return position_ ?? PositionDefaultValue; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return position_ != null; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      position_ = null;
    }

    /// <summary>Field number for the "positionDesired" field.</summary>
    public const int PositionDesiredFieldNumber = 3;
    private readonly static string PositionDesiredDefaultValue = "";

    private string positionDesired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PositionDesired {
      get { return positionDesired_ ?? PositionDesiredDefaultValue; }
      set {
        positionDesired_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "positionDesired" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionDesired {
      get { return positionDesired_ != null; }
    }
    /// <summary>Clears the value of the "positionDesired" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionDesired() {
      positionDesired_ = null;
    }

    /// <summary>Field number for the "positionAfter" field.</summary>
    public const int PositionAfterFieldNumber = 4;
    private readonly static string PositionAfterDefaultValue = "";

    private string positionAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PositionAfter {
      get { return positionAfter_ ?? PositionAfterDefaultValue; }
      set {
        positionAfter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "positionAfter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositionAfter {
      get { return positionAfter_ != null; }
    }
    /// <summary>Clears the value of the "positionAfter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositionAfter() {
      positionAfter_ = null;
    }

    /// <summary>Field number for the "desiredAllocQty" field.</summary>
    public const int DesiredAllocQtyFieldNumber = 5;
    private readonly static string DesiredAllocQtyDefaultValue = "";

    private string desiredAllocQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DesiredAllocQty {
      get { return desiredAllocQty_ ?? DesiredAllocQtyDefaultValue; }
      set {
        desiredAllocQty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "desiredAllocQty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesiredAllocQty {
      get { return desiredAllocQty_ != null; }
    }
    /// <summary>Clears the value of the "desiredAllocQty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesiredAllocQty() {
      desiredAllocQty_ = null;
    }

    /// <summary>Field number for the "allowedAllocQty" field.</summary>
    public const int AllowedAllocQtyFieldNumber = 6;
    private readonly static string AllowedAllocQtyDefaultValue = "";

    private string allowedAllocQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AllowedAllocQty {
      get { return allowedAllocQty_ ?? AllowedAllocQtyDefaultValue; }
      set {
        allowedAllocQty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "allowedAllocQty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowedAllocQty {
      get { return allowedAllocQty_ != null; }
    }
    /// <summary>Clears the value of the "allowedAllocQty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowedAllocQty() {
      allowedAllocQty_ = null;
    }

    /// <summary>Field number for the "isMonetary" field.</summary>
    public const int IsMonetaryFieldNumber = 7;
    private readonly static bool IsMonetaryDefaultValue = false;

    private bool isMonetary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMonetary {
      get { if ((_hasBits0 & 1) != 0) { return isMonetary_; } else { return IsMonetaryDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isMonetary_ = value;
      }
    }
    /// <summary>Gets whether the "isMonetary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsMonetary {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "isMonetary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsMonetary() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderAllocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderAllocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Position != other.Position) return false;
      if (PositionDesired != other.PositionDesired) return false;
      if (PositionAfter != other.PositionAfter) return false;
      if (DesiredAllocQty != other.DesiredAllocQty) return false;
      if (AllowedAllocQty != other.AllowedAllocQty) return false;
      if (IsMonetary != other.IsMonetary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccount) hash ^= Account.GetHashCode();
      if (HasPosition) hash ^= Position.GetHashCode();
      if (HasPositionDesired) hash ^= PositionDesired.GetHashCode();
      if (HasPositionAfter) hash ^= PositionAfter.GetHashCode();
      if (HasDesiredAllocQty) hash ^= DesiredAllocQty.GetHashCode();
      if (HasAllowedAllocQty) hash ^= AllowedAllocQty.GetHashCode();
      if (HasIsMonetary) hash ^= IsMonetary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccount) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (HasPosition) {
        output.WriteRawTag(18);
        output.WriteString(Position);
      }
      if (HasPositionDesired) {
        output.WriteRawTag(26);
        output.WriteString(PositionDesired);
      }
      if (HasPositionAfter) {
        output.WriteRawTag(34);
        output.WriteString(PositionAfter);
      }
      if (HasDesiredAllocQty) {
        output.WriteRawTag(42);
        output.WriteString(DesiredAllocQty);
      }
      if (HasAllowedAllocQty) {
        output.WriteRawTag(50);
        output.WriteString(AllowedAllocQty);
      }
      if (HasIsMonetary) {
        output.WriteRawTag(56);
        output.WriteBool(IsMonetary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccount) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (HasPosition) {
        output.WriteRawTag(18);
        output.WriteString(Position);
      }
      if (HasPositionDesired) {
        output.WriteRawTag(26);
        output.WriteString(PositionDesired);
      }
      if (HasPositionAfter) {
        output.WriteRawTag(34);
        output.WriteString(PositionAfter);
      }
      if (HasDesiredAllocQty) {
        output.WriteRawTag(42);
        output.WriteString(DesiredAllocQty);
      }
      if (HasAllowedAllocQty) {
        output.WriteRawTag(50);
        output.WriteString(AllowedAllocQty);
      }
      if (HasIsMonetary) {
        output.WriteRawTag(56);
        output.WriteBool(IsMonetary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (HasPosition) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (HasPositionDesired) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionDesired);
      }
      if (HasPositionAfter) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionAfter);
      }
      if (HasDesiredAllocQty) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredAllocQty);
      }
      if (HasAllowedAllocQty) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AllowedAllocQty);
      }
      if (HasIsMonetary) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderAllocation other) {
      if (other == null) {
        return;
      }
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasPositionDesired) {
        PositionDesired = other.PositionDesired;
      }
      if (other.HasPositionAfter) {
        PositionAfter = other.PositionAfter;
      }
      if (other.HasDesiredAllocQty) {
        DesiredAllocQty = other.DesiredAllocQty;
      }
      if (other.HasAllowedAllocQty) {
        AllowedAllocQty = other.AllowedAllocQty;
      }
      if (other.HasIsMonetary) {
        IsMonetary = other.IsMonetary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Position = input.ReadString();
            break;
          }
          case 26: {
            PositionDesired = input.ReadString();
            break;
          }
          case 34: {
            PositionAfter = input.ReadString();
            break;
          }
          case 42: {
            DesiredAllocQty = input.ReadString();
            break;
          }
          case 50: {
            AllowedAllocQty = input.ReadString();
            break;
          }
          case 56: {
            IsMonetary = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Position = input.ReadString();
            break;
          }
          case 26: {
            PositionDesired = input.ReadString();
            break;
          }
          case 34: {
            PositionAfter = input.ReadString();
            break;
          }
          case 42: {
            DesiredAllocQty = input.ReadString();
            break;
          }
          case 50: {
            AllowedAllocQty = input.ReadString();
            break;
          }
          case 56: {
            IsMonetary = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
