// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MarketDataRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from MarketDataRequest.proto</summary>
  public static partial class MarketDataRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for MarketDataRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketDataRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdNYXJrZXREYXRhUmVxdWVzdC5wcm90bxIIcHJvdG9idWYaDkNvbnRyYWN0",
            "LnByb3RvIoADChFNYXJrZXREYXRhUmVxdWVzdBISCgVyZXFJZBgBIAEoBUgA",
            "iAEBEikKCGNvbnRyYWN0GAIgASgLMhIucHJvdG9idWYuQ29udHJhY3RIAYgB",
            "ARIcCg9nZW5lcmljVGlja0xpc3QYAyABKAlIAogBARIVCghzbmFwc2hvdBgE",
            "IAEoCEgDiAEBEh8KEnJlZ3VsYXRvcnlTbmFwc2hvdBgFIAEoCEgEiAEBEk0K",
            "EW1hcmtldERhdGFPcHRpb25zGAYgAygLMjIucHJvdG9idWYuTWFya2V0RGF0",
            "YVJlcXVlc3QuTWFya2V0RGF0YU9wdGlvbnNFbnRyeRo4ChZNYXJrZXREYXRh",
            "T3B0aW9uc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFC",
            "CAoGX3JlcUlkQgsKCV9jb250cmFjdEISChBfZ2VuZXJpY1RpY2tMaXN0QgsK",
            "CV9zbmFwc2hvdEIVChNfcmVndWxhdG9yeVNuYXBzaG90QkEKFmNvbS5pYi5j",
            "bGllbnQucHJvdG9idWZCFk1hcmtldERhdGFSZXF1ZXN0UHJvdG+qAg5JQkFw",
            "aS5wcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.ContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.MarketDataRequest), global::IBApi.protobuf.MarketDataRequest.Parser, new[]{ "ReqId", "Contract", "GenericTickList", "Snapshot", "RegulatorySnapshot", "MarketDataOptions" }, new[]{ "ReqId", "Contract", "GenericTickList", "Snapshot", "RegulatorySnapshot" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MarketDataRequest : pb::IMessage<MarketDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketDataRequest> _parser = new pb::MessageParser<MarketDataRequest>(() => new MarketDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.MarketDataRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest(MarketDataRequest other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      genericTickList_ = other.genericTickList_;
      snapshot_ = other.snapshot_;
      regulatorySnapshot_ = other.regulatorySnapshot_;
      marketDataOptions_ = other.marketDataOptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest Clone() {
      return new MarketDataRequest(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 2;
    private global::IBApi.protobuf.Contract contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IBApi.protobuf.Contract Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "genericTickList" field.</summary>
    public const int GenericTickListFieldNumber = 3;
    private readonly static string GenericTickListDefaultValue = "";

    private string genericTickList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GenericTickList {
      get { return genericTickList_ ?? GenericTickListDefaultValue; }
      set {
        genericTickList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "genericTickList" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGenericTickList {
      get { return genericTickList_ != null; }
    }
    /// <summary>Clears the value of the "genericTickList" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGenericTickList() {
      genericTickList_ = null;
    }

    /// <summary>Field number for the "snapshot" field.</summary>
    public const int SnapshotFieldNumber = 4;
    private readonly static bool SnapshotDefaultValue = false;

    private bool snapshot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Snapshot {
      get { if ((_hasBits0 & 2) != 0) { return snapshot_; } else { return SnapshotDefaultValue; } }
      set {
        _hasBits0 |= 2;
        snapshot_ = value;
      }
    }
    /// <summary>Gets whether the "snapshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSnapshot {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "snapshot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSnapshot() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "regulatorySnapshot" field.</summary>
    public const int RegulatorySnapshotFieldNumber = 5;
    private readonly static bool RegulatorySnapshotDefaultValue = false;

    private bool regulatorySnapshot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RegulatorySnapshot {
      get { if ((_hasBits0 & 4) != 0) { return regulatorySnapshot_; } else { return RegulatorySnapshotDefaultValue; } }
      set {
        _hasBits0 |= 4;
        regulatorySnapshot_ = value;
      }
    }
    /// <summary>Gets whether the "regulatorySnapshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegulatorySnapshot {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "regulatorySnapshot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegulatorySnapshot() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "marketDataOptions" field.</summary>
    public const int MarketDataOptionsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_marketDataOptions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> marketDataOptions_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> MarketDataOptions {
      get { return marketDataOptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (!object.Equals(Contract, other.Contract)) return false;
      if (GenericTickList != other.GenericTickList) return false;
      if (Snapshot != other.Snapshot) return false;
      if (RegulatorySnapshot != other.RegulatorySnapshot) return false;
      if (!MarketDataOptions.Equals(other.MarketDataOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (HasGenericTickList) hash ^= GenericTickList.GetHashCode();
      if (HasSnapshot) hash ^= Snapshot.GetHashCode();
      if (HasRegulatorySnapshot) hash ^= RegulatorySnapshot.GetHashCode();
      hash ^= MarketDataOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasGenericTickList) {
        output.WriteRawTag(26);
        output.WriteString(GenericTickList);
      }
      if (HasSnapshot) {
        output.WriteRawTag(32);
        output.WriteBool(Snapshot);
      }
      if (HasRegulatorySnapshot) {
        output.WriteRawTag(40);
        output.WriteBool(RegulatorySnapshot);
      }
      marketDataOptions_.WriteTo(output, _map_marketDataOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasGenericTickList) {
        output.WriteRawTag(26);
        output.WriteString(GenericTickList);
      }
      if (HasSnapshot) {
        output.WriteRawTag(32);
        output.WriteBool(Snapshot);
      }
      if (HasRegulatorySnapshot) {
        output.WriteRawTag(40);
        output.WriteBool(RegulatorySnapshot);
      }
      marketDataOptions_.WriteTo(ref output, _map_marketDataOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (HasGenericTickList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GenericTickList);
      }
      if (HasSnapshot) {
        size += 1 + 1;
      }
      if (HasRegulatorySnapshot) {
        size += 1 + 1;
      }
      size += marketDataOptions_.CalculateSize(_map_marketDataOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          Contract = new global::IBApi.protobuf.Contract();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.HasGenericTickList) {
        GenericTickList = other.GenericTickList;
      }
      if (other.HasSnapshot) {
        Snapshot = other.Snapshot;
      }
      if (other.HasRegulatorySnapshot) {
        RegulatorySnapshot = other.RegulatorySnapshot;
      }
      marketDataOptions_.MergeFrom(other.marketDataOptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.Contract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 26: {
            GenericTickList = input.ReadString();
            break;
          }
          case 32: {
            Snapshot = input.ReadBool();
            break;
          }
          case 40: {
            RegulatorySnapshot = input.ReadBool();
            break;
          }
          case 50: {
            marketDataOptions_.AddEntriesFrom(input, _map_marketDataOptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.Contract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 26: {
            GenericTickList = input.ReadString();
            break;
          }
          case 32: {
            Snapshot = input.ReadBool();
            break;
          }
          case 40: {
            RegulatorySnapshot = input.ReadBool();
            break;
          }
          case 50: {
            marketDataOptions_.AddEntriesFrom(ref input, _map_marketDataOptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
